#@data/values-schema

---
#@schema/desc "The namespace in which to deploy cert-manager."
#@schema/validation min_len=1
namespace: cert-manager

#@schema/desc "Settings for the Kyverno policies."
policies:
  #@schema/desc "Whether to include the out-of-the-box Kyverno policies to validate and secure the package installation."
  include: false

#@schema/desc "Settings for the corporate proxy."
proxy:
  #@schema/desc "The HTTPS proxy to use for network traffic."
  https_proxy: ""
  #@schema/desc "The HTTP proxy to use for network traffic."
  http_proxy: ""
  #@schema/desc "A comma-separated list of hostnames, IP addresses, or IP ranges in CIDR format that should not use the proxy."
  no_proxy: ""

#@schema/desc "Settings for the cert-manager controller."
controller:
  #@schema/desc "Number of the log level verbosity."
  #@schema/validation min=1,max=5
  loglevel: 2
  #@schema/desc "The number of replicas. In order to enable high availability, 2 replicas are recommended."
  #@schema/validation min=1
  replicas: 1

#@schema/desc "Settings for the cainjector controller."
cainjector:
  #@schema/desc "Number of the log level verbosity."
  #@schema/validation min=1,max=5
  loglevel: 2
  #@schema/desc "The number of replicas. In order to enable high availability, 2 replicas are recommended."
  #@schema/validation min=1
  replicas: 1

#@schema/desc "Settings for the cert-manager webhook."
webhook:
  #@schema/desc "Number of the log level verbosity."
  #@schema/validation min=1,max=5
  loglevel: 2
  #@schema/desc "The number of replicas. In order to enable high availability, at least 3 replicas are recommended."
  #@schema/validation min=1
  replicas: 1
  #@schema/desc "Whether to run the webhook in the host network so that it can be reached by the cert-manager controller in environments like AWS EKS. More information: https://cert-manager.io/docs/installation/compatibility."
  host_network: false
  #@schema/desc "The port where the webhook is exposed. The default port needs changing in environments like AWS EKS and AWS Fargate. More information: https://cert-manager.io/docs/installation/compatibility."
  secure_port: 6443

#@schema/desc "Leader election configuration for the cert-manager and cert-manager-cainjector Deployments."
leader_election:
  #@schema/desc "Namespace used to perform leader election. The default namespace needs changing in environments like GKE. More information: https://cert-manager.io/docs/installation/compatibility."
  #@schema/validation min_len=1
  namespace: kube-system

#@schema/desc "Settings for the built-in, private PKI"
private_pki:
  #@schema/desc "Whether to include a ClusterIssuer for a private PKI."
  include: true

#@schema/desc "Settings for Let's Encrypt."
letsencrypt:
  #@schema/desc "Whether to include a ClusterIssuer for Let's Encrypt."
  include: false
  #@schema/desc "Whether to use Let's Encrypt staging (recommended for non-production environments) or production."
  production: false
  #@schema/desc "The email address that Let's Encrypt will use to send info on expiring certificates or other issues."
  #@schema/validation min_len=5, when=lambda _, ctx: ctx.parent["include"]
  email: ""
  challenge:
    #@schema/desc "The type of challenge used by the ACME CA Server. Valid options: `http01`, `dns01`."
    #@schema/validation one_of=["http01", "dns01"]
    type: http01
    secret:
      #@schema/desc "Name of the Secret containing the credentials needed for the dns01 challenge."
      #@schema/validation min_len=1, when=lambda _, ctx: ctx.root["letsencrypt"]["challenge"]["type"] == "dns01"
      name: ""
      #@schema/desc "The key within the Secret that contains the credentials needed for the dns01 challenge."
      #@schema/validation min_len=1, when=lambda _, ctx: ctx.root["letsencrypt"]["challenge"]["type"] == "dns01"
      key: ""
      #@schema/desc "Namespace containing the Secret with the credentials needed for the dns01 challenge."
      #@schema/validation min_len=1, when=lambda _, ctx: ctx.root["letsencrypt"]["challenge"]["type"] == "dns01"
      namespace: kadras-system
    #@schema/desc "The DNS provider to use for the ACME dns01 challenge. Valid options: `digital_ocean`."
    #@schema/validation min_len=1, when=lambda _, ctx: ctx.root["letsencrypt"]["challenge"]["type"] == "dns01"
    #@schema/validation one_of=["digital_ocean"]
    dns_provider: digital_ocean
