#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#! CONTROLLER

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"cert-manager"}})
---
spec:
  #@overlay/match missing_ok=True
  replicas: #@ data.values.controller.replicas

#@ if data.values.controller.replicas > 1:
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cert-manager
  namespace: #@ data.values.namespace
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/component: "controller"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/component: "controller"
#@ end

#! CAINJECTOR

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"cert-manager-cainjector"}})
---
spec:
  #@overlay/match missing_ok=True
  replicas: #@ data.values.cainjector.replicas

#@ if data.values.cainjector.replicas > 1:
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cert-manager-cainjector
  namespace: #@ data.values.namespace
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/component: "cainjector"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/component: "cainjector"
#@ end

#! WEBHOOK

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"cert-manager-webhook"}})
---
spec:
  #@overlay/match missing_ok=True
  replicas: #@ data.values.webhook.replicas

#@ if data.values.webhook.replicas >= 2:
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cert-manager-webhook
  namespace: #@ data.values.namespace
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/component: "webhook"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/component: "webhook"
#@ end
