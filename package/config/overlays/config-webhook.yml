#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:yaml", "yaml")

#@ def webhook_config():
---
apiVersion: webhook.config.cert-manager.io/v1alpha1
kind: WebhookConfiguration

logging:
  verbosity: #@ data.values.webhook.loglevel
  format: text

securePort: #@ data.values.webhook.secure_port
#@ end

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cert-manager-webhook
  namespace: #@ data.values.namespace
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/component: "webhook"
  annotations:
    kapp.k14s.io/versioned: ""
    kapp.k14s.io/versioned-keep-original: ""
    kapp.k14s.io/num-versions: "5"
data:
  config.yaml: #@ yaml.encode(webhook_config())

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"cert-manager-webhook"}})
---
spec:
  template:
    spec:
      containers:
        #@overlay/match by="name"
        - name: cert-manager-webhook
          #@overlay/replace
          args:
            - --config=/var/cert-manager/config/config.yaml
            - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
            - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
            - --dynamic-serving-dns-names=cert-manager-webhook
            - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)
            - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc
          #@overlay/match missing_ok=True
          volumeMounts:
            - name: config
              mountPath: /var/cert-manager/config
      #@overlay/match missing_ok=True
      volumes:
        - name: config
          configMap:
            name: cert-manager-webhook
