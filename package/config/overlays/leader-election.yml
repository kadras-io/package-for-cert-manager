#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#! The cert-manager controller and cainjector rely on an active/passive leader election strategy.
#! The namespace used by the leader election can be configured.
#! In some cloud environments like GKE, the namespace used by the leader election requires changing.
#! See: https://cert-manager.io/docs/installation/compatibility.

#@overlay/match by=overlay.subset({"metadata":{"namespace":"kube-system"}}), expects=4
---
metadata:
  namespace: #@ data.values.leader_election.namespace

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"cert-manager"}})
---
spec:
  template:
    spec:
      containers:
      #@overlay/match by="name"
      - name: cert-manager-controller
        args:
          #@overlay/match by=lambda i,l,r: l.startswith("--leader-election-namespace=")
          - #@ "--leader-election-namespace={}".format(data.values.leader_election.namespace)
          - #@ "--leader-election-lease-duration={}".format(data.values.leader_election.lease_duration)
          - #@ "--leader-election-renew-deadline={}".format(data.values.leader_election.renew_deadline)
          - #@ "--leader-election-retry-period={}".format(data.values.leader_election.retry_period)

#@overlay/match by=overlay.subset({"kind":"Deployment", "metadata":{"name":"cert-manager-cainjector"}})
---
spec:
  template:
    spec:
      containers:
      #@overlay/match by="name"
      - name: cert-manager-cainjector
        args:
          #@overlay/match by=lambda i,l,r: l.startswith("--leader-election-namespace=")
          - #@ "--leader-election-namespace={}".format(data.values.leader_election.namespace)
          - #@ "--leader-election-lease-duration={}".format(data.values.leader_election.lease_duration)
          - #@ "--leader-election-renew-deadline={}".format(data.values.leader_election.renew_deadline)
          - #@ "--leader-election-retry-period={}".format(data.values.leader_election.retry_period)
